{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\rest\\\\client\\\\src\\\\pages\\\\Waiter.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Container, Card, Row, Col, Button } from 'react-bootstrap';\nimport { fetchAllOrders } from '../http/userAPI';\nimport { observer } from 'mobx-react-lite';\nimport UpdateOrderStatus from '../components/modals/UpdateStatusOrder';\nimport { Context } from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Waiter = _s(observer(_c = _s(() => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [upStatusVisible, setUpStatusVisible] = useState(false);\n  const {\n    user\n  } = useContext(Context);\n  useEffect(() => {\n    fetchAllOrders().then(data => {\n      if (Array.isArray(data)) {\n        setOrders(data);\n      } else {\n        console.error('Некорректный формат данных:', data);\n      }\n    }).catch(err => {\n      console.error('Ошибка при получении заказов:', err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5 all-orders\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"\\u0412\\u0441\\u0435 \\u0417\\u0430\\u043A\\u0430\\u0437\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow-sm\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"\\u0417\\u0430\\u043A\\u0430\\u0437 #\", order.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this), \" \", order.order_status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"redBg\",\n                children: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0438\\u043C\\u043E\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this), \" \", order.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                user.setSelectedOrder(order);\n                setUpStatusVisible(true);\n              },\n              className: \"w-100\",\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateOrderStatus, {\n      show: upStatusVisible,\n      onHide: () => setUpStatusVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}, \"LTND8TiJS/B/6BaiX6+DErBodVU=\")), \"LTND8TiJS/B/6BaiX6+DErBodVU=\");\n_c2 = Waiter;\nexport default Waiter;\nvar _c, _c2;\n$RefreshReg$(_c, \"Waiter$observer\");\n$RefreshReg$(_c2, \"Waiter\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Container","Card","Row","Col","Button","fetchAllOrders","observer","UpdateOrderStatus","Context","jsxDEV","_jsxDEV","Waiter","_s","_c","orders","setOrders","upStatusVisible","setUpStatusVisible","user","then","data","Array","isArray","console","error","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","md","Body","Title","id","Text","order_status","name","variant","onClick","setSelectedOrder","show","onHide","_c2","$RefreshReg$"],"sources":["D:/projects/rest/client/src/pages/Waiter.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Card, Row, Col, Button } from 'react-bootstrap';\r\nimport { fetchAllOrders } from '../http/userAPI';\r\nimport { observer } from 'mobx-react-lite';\r\nimport UpdateOrderStatus from '../components/modals/UpdateStatusOrder';\r\nimport { Context } from '../index';\r\n\r\nconst Waiter = observer(() => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [upStatusVisible, setUpStatusVisible] = useState(false);\r\n    const { user } = useContext(Context);\r\n\r\nuseEffect(() => {\r\n    fetchAllOrders()\r\n        .then(data => {\r\n            if (Array.isArray(data)) {\r\n                setOrders(data);\r\n            } else {\r\n                console.error('Некорректный формат данных:', data);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.error('Ошибка при получении заказов:', err);\r\n        });\r\n}, []);\r\n\r\n\r\n    return (\r\n        <Container className='mt-5 all-orders'>\r\n            <h2 className='text-center mb-4'>Все Заказы</h2>\r\n            <Row>\r\n                {orders.map(order => (\r\n                    <Col md={4} className='mb-4' key={order.id}>\r\n                        <Card className='shadow-sm'>\r\n                            <Card.Body>\r\n                                <Card.Title>Заказ #{order.id}</Card.Title>\r\n                                <Card.Text>\r\n                                    <strong>Статус:</strong> {order.order_status}\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <strong className='redBg'>Содержимое заказа:</strong> {order.name}\r\n                                </Card.Text>\r\n                                <Button \r\n                                    variant=\"primary\"  \r\n                                    onClick={() => {\r\n                                        user.setSelectedOrder(order);\r\n                                        setUpStatusVisible(true);\r\n                                    }} \r\n                                    className=\"w-100\"  \r\n                                >\r\n                                    Изменить статус заказа\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            <UpdateOrderStatus \r\n                show={upStatusVisible} \r\n                onHide={() => setUpStatusVisible(false)}\r\n            />\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Waiter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}