{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\rest\\\\client\\\\src\\\\components\\\\TypeBar.js\",\n  _s = $RefreshSig$();\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\nimport { Context } from '..';\nimport { Image } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { REST_ROUTE } from \"../utils/consts\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Scrollbar, FreeMode } from 'swiper/modules';\n\n// Импортируем стили Swiper\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/scrollbar';\nimport 'swiper/css/free-mode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    menuitem\n  } = useContext(Context);\n  const navigate = useNavigate();\n  const Menu = () => {\n    menuitem.setSelectedType({});\n    navigate(REST_ROUTE);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"type-bar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"menuBtn\",\n      onClick: Menu,\n      children: \"\\u041C\\u0435\\u043D\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Navigation, Scrollbar, FreeMode],\n      spaceBetween: 20,\n      slidesPerView: 'auto',\n      freeMode: true,\n      navigation: true,\n      className: \"types-swiper\",\n      children: menuitem.types.map(type => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        className: `customList-item ${type.id === menuitem.selectedType.id ? 'active' : ''}`,\n        onClick: () => menuitem.setSelectedType(type),\n        onMouseEnter: e => e.currentTarget.style.backgroundColor = '#e9ecef',\n        onMouseLeave: e => e.currentTarget.style.backgroundColor = '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: type.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menuListItem-img\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `${process.env.REACT_APP_API_URL}/typeImages/${type.img}`,\n            alt: type.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, type.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}, \"/aqm0y2xhlrOyyFUtPj9mcDMi1M=\", false, function () {\n  return [useNavigate];\n})), \"/aqm0y2xhlrOyyFUtPj9mcDMi1M=\", false, function () {\n  return [useNavigate];\n});\n_c2 = TypeBar;\nexport default TypeBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"names":["observer","React","useContext","Context","Image","useNavigate","REST_ROUTE","Swiper","SwiperSlide","Navigation","Scrollbar","FreeMode","jsxDEV","_jsxDEV","TypeBar","_s","_c","menuitem","navigate","Menu","setSelectedType","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","modules","spaceBetween","slidesPerView","freeMode","navigation","types","map","type","id","selectedType","onMouseEnter","e","currentTarget","style","backgroundColor","onMouseLeave","name","src","process","env","REACT_APP_API_URL","img","alt","_c2","$RefreshReg$"],"sources":["D:/projects/rest/client/src/components/TypeBar.js"],"sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { Context } from '..';\r\nimport { Image } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { REST_ROUTE } from \"../utils/consts\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Navigation, Scrollbar, FreeMode } from 'swiper/modules';\r\n\r\n// Импортируем стили Swiper\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/scrollbar';\r\nimport 'swiper/css/free-mode';\r\n\r\nconst TypeBar = observer(() => {\r\n    const { menuitem } = useContext(Context);\r\n    const navigate = useNavigate();\r\n\r\n    const Menu = () => {\r\n        menuitem.setSelectedType({});\r\n        navigate(REST_ROUTE);\r\n    };\r\n\r\n    return (\r\n        <div className=\"type-bar-container\">\r\n            <button className='menuBtn' onClick={Menu}>Меню</button>\r\n            \r\n            <Swiper\r\n                modules={[Navigation, Scrollbar, FreeMode]}\r\n                spaceBetween={20}\r\n                slidesPerView={'auto'}\r\n                freeMode={true}\r\n                navigation\r\n                className=\"types-swiper\"\r\n            >\r\n                {menuitem.types.map(type => (\r\n                    <SwiperSlide key={type.id} className={`customList-item ${type.id === menuitem.selectedType.id ? 'active' : ''}`}\r\n                            onClick={() => menuitem.setSelectedType(type)}\r\n                            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#e9ecef'}\r\n                            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = ''}\r\n                        >\r\n                        <span>{type.name}</span>\r\n                        <div className='menuListItem-img'>\r\n                            <Image\r\n                                src={`${process.env.REACT_APP_API_URL}/typeImages/${type.img}`}\r\n                                alt={type.name}\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default TypeBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}